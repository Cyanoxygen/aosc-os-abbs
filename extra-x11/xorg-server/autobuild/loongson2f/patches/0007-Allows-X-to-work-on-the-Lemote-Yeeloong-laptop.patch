From 4d915610a0da35cbfba1430ea9ab844c89238bba Mon Sep 17 00:00:00 2001
From: liushuyu <liushuyu011@gmail.com>
Date: Sat, 15 Aug 2020 01:32:42 -0600
Subject: [PATCH] Allows X to work on the Lemote Yeeloong laptop

---
 hw/xfree86/common/compiler.h            | 64 ++++++++++++++++++++++++-
 hw/xfree86/dri/sarea.h                  |  2 +
 hw/xfree86/os-support/linux/lnx_video.c |  7 ++-
 3 files changed, 70 insertions(+), 3 deletions(-)

diff --git a/hw/xfree86/common/compiler.h b/hw/xfree86/common/compiler.h
index 2b2008b3f..478111a27 100644
--- a/hw/xfree86/common/compiler.h
+++ b/hw/xfree86/common/compiler.h
@@ -519,12 +519,73 @@ xf86WriteMmio32Le(__volatile__ void *base, const unsigned long offset,
 }
 
 #elif defined(__mips__) || (defined(__arm32__) && !defined(__linux__))
-#if defined(__arm32__) || defined(__mips64)
+#if defined(__arm32__) || (defined(__mips64) && !defined(_MIPS_TUNE_LOONGSON2F))
 #define PORT_SIZE long
 #else
 #define PORT_SIZE short
 #endif
 
+#ifdef _MIPS_TUNE_LOONGSON2F
+extern _X_EXPORT volatile unsigned char *ioBase;      /* Memory mapped I/O port area */
+
+#ifndef MAP_FAILED
+#define MAP_FAILED ((void *)-1)
+#endif
+
+static __inline__ void
+outb(unsigned PORT_SIZE port, unsigned char val)
+{
+    if (ioBase == MAP_FAILED)
+        return;
+    *(volatile unsigned char *) (((unsigned PORT_SIZE) (port)) + ioBase) =
+        val;
+}
+
+static __inline__ void
+outw(unsigned PORT_SIZE port, unsigned short val)
+{
+    if (ioBase == MAP_FAILED)
+        return;
+    *(volatile unsigned short *) (((unsigned PORT_SIZE) (port)) + ioBase) =
+        val;
+}
+
+static __inline__ void
+outl(unsigned PORT_SIZE port, unsigned int val)
+{
+    if (ioBase == MAP_FAILED)
+        return;
+    *(volatile unsigned int *) (((unsigned PORT_SIZE) (port)) + ioBase) =
+        val;
+}
+
+static __inline__ unsigned int
+inb(unsigned PORT_SIZE port)
+{
+    if (ioBase == MAP_FAILED)
+        return 0;
+    return *(volatile unsigned char *) (((unsigned PORT_SIZE) (port)) +
+                                        ioBase);
+}
+
+static __inline__ unsigned int
+inw(unsigned PORT_SIZE port)
+{
+    if (ioBase == MAP_FAILED)
+        return 0;
+    return *(volatile unsigned short *) (((unsigned PORT_SIZE) (port)) +
+                                         ioBase);
+}
+
+static __inline__ unsigned int
+inl(unsigned PORT_SIZE port)
+{
+    if (ioBase == MAP_FAILED)
+        return 0;
+    return *(volatile unsigned int *) (((unsigned PORT_SIZE) (port)) +
+                                       ioBase);
+}
+#else // !_MIPS_TUNE_LOONGSON2F
 _X_EXPORT unsigned int IOPortBase;      /* Memory mapped I/O port area */
 
 static __inline__ void
@@ -568,6 +629,7 @@ inl(unsigned PORT_SIZE port)
     return *(volatile unsigned int *) (((unsigned PORT_SIZE) (port)) +
                                        IOPortBase);
 }
+#endif
 
 #if defined(__mips__)
 #ifdef __linux__                    /* don't mess with other OSs */
diff --git a/hw/xfree86/dri/sarea.h b/hw/xfree86/dri/sarea.h
index 1bef2421e..5b96e9f48 100644
--- a/hw/xfree86/dri/sarea.h
+++ b/hw/xfree86/dri/sarea.h
@@ -41,6 +41,8 @@
 /* SAREA area needs to be at least a page */
 #if defined(__alpha__)
 #define SAREA_MAX 			0x2000
+#elif defined(__mips__)
+#define SAREA_MAX			0x4000
 #elif defined(__ia64__)
 #define SAREA_MAX			0x10000 /* 64kB */
 #else
diff --git a/hw/xfree86/os-support/linux/lnx_video.c b/hw/xfree86/os-support/linux/lnx_video.c
index 04e45092a..5b3fab1c9 100644
--- a/hw/xfree86/os-support/linux/lnx_video.c
+++ b/hw/xfree86/os-support/linux/lnx_video.c
@@ -79,7 +79,7 @@ xf86OSInitVidMem(VidMemInfoPtr pVidMem)
 /* I/O Permissions section                                                 */
 /***************************************************************************/
 
-#if defined(__powerpc__)
+#if defined(__powerpc__) || defined(__mips__)
 volatile unsigned char *ioBase = NULL;
 
 #ifndef __NR_pciconfig_iobase
@@ -90,8 +90,11 @@ static Bool
 hwEnableIO(void)
 {
     int fd;
+#if defined(__mips__)
+    unsigned long ioBase_phys = 0x1fd00000;
+#else
     unsigned int ioBase_phys = syscall(__NR_pciconfig_iobase, 2, 0, 0);
-
+#endif
     fd = open("/dev/mem", O_RDWR);
     if (ioBase == NULL) {
         ioBase = (volatile unsigned char *) mmap(0, 0x20000,
-- 
2.28.0

